{"version":3,"sources":["script.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","countries","darkMode","localStorage","getItem","listVisible","currentRegion","currentRegionCountries","currentCountry","inputValue","wordQuery","searchedCountry","detailPageActive","container","document","querySelector","body","switchCtn","filterCtn","list","filterHeaderText","form","searchInput","mainCtn","mainEle","sortAlphabetically","a","b","nameA","name","common","toUpperCase","nameB","comparison","fetch","then","response","json","sort","innerHTML","forEach","country","bordersMain","map","count","borders","undefined","filter","flat","flags","region","capital","population","concat","png","toLocaleString","err","console","log","updateThemeState","setItem","classList","add","remove","addEventListener","toggle","Array","from","children","e","updateUIFromRegion","target","textContent","resetFilterText","setTimeout","updateUIAll","value","length","updateUIfromSearch","word","toLowerCase","includes","countryBorders","html","getBorders","arguments","_loop","i","borderCountry","find","cca3","push","countryName","renderDetailPage","_currentCountry","subregion","tld","currencies","languages","nativeNameObjectsArr","currenciesObjArr","currenciesArr","languagesArr","nativeName","property","currency","join"],"mappings":"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","file":"script.js","sourcesContent":["let countries = []\r\nlet darkMode = localStorage.getItem('darkMode') || false\r\nlet listVisible = false\r\nlet currentRegion = ''\r\nlet currentRegionCountries = []\r\nlet currentCountry = ''\r\nlet inputValue = ''\r\nlet wordQuery = ''\r\nlet searchedCountry = []\r\nlet detailPageActive = false\r\n\r\nconst container = document.querySelector('.countries__ctn')\r\nconst body = document.querySelector('body')\r\nconst switchCtn = document.querySelector('#switch__ctn')\r\nconst filterCtn = document.querySelector('.filter')\r\nconst list = document.querySelector('.list')\r\nconst filterHeaderText = document.querySelector('.filter__header--text')\r\nconst form = document.querySelector('#form')\r\nconst searchInput = document.querySelector('#search')\r\nconst mainCtn = document.querySelector('.mainCtn')\r\nconst mainEle = document.querySelector('main')\r\n\r\n\r\n\r\n\r\n\r\nfetch('https://restcountries.com/v3.1/all')\r\n    .then(response => response.json())  // convert to json\r\n    .then(json => {\r\n        countries = json.sort(sortAlphabetically)\r\n        container.innerHTML = ''\r\n        countries.forEach(country => {\r\n            country.bordersMain = countries.map(count => {\r\n                const { borders } = count\r\n                if (country == count) {\r\n                    return borders\r\n                }\r\n                if (country == count && borders == undefined) {\r\n                    return 'none'\r\n                }\r\n            }).filter(count => count !== undefined).flat()\r\n        })\r\n        countries.map(country => {\r\n            const { name, flags, region, capital, population } = country\r\n            container.innerHTML += `\r\n            <div onclick=\"renderDetailPage(this.id)\" id=\"${name.common}\" class=\"card shadow-md bg-white cursor-pointer overflow-hidden rounded-md\">\r\n            <div class=\"card__upper w-full h-[11rem] overflow-hidden\">\r\n              <img class=\"w-full h-full objecct-fit rounded-t-md\" src=${flags.png} alt=\"\" loading=\"lazy\">\r\n            </div>\r\n            <div class=\"card__lower flex flex-col mt-6 px-5 pb-6 h-full\">\r\n              <p class=\"card__header font-bold pb-3\">${name.common}</p>\r\n                <div class=\"container\">\r\n                    <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Population: </p><span>${population.toLocaleString(\"en-US\")}</span></div>\r\n                    <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Region: </p><span>${region}</span></div>\r\n                    <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Capital: </p><span>${typeof(capital) == 'object' ? capital[0] : capital}</span></div>\r\n                </div>\r\n\r\n            </div>\r\n          </div>\r\n            `\r\n        })\r\n\r\n    })    //print data to console\r\n    .catch(err => console.log('Request Failed', err));\r\n\r\n\r\nfunction sortAlphabetically(a, b) {\r\n  // Use toUpperCase() to ignore character casing\r\n  const nameA = a.name.common.toUpperCase();\r\n  const nameB = b.name.common.toUpperCase();\r\n\r\n  let comparison = 0;\r\n  if (nameA > nameB) {\r\n    comparison = 1;\r\n  } else if (nameA < nameB) {\r\n    comparison = -1;\r\n  }\r\n  return comparison;\r\n}\r\n\r\n\r\nlet updateThemeState = () => {\r\n    localStorage.setItem('darkMode', darkMode)\r\n    if (darkMode) {\r\n        body.classList.add('dark')\r\n        switchCtn.innerHTML = `\r\n        <i class=\"bi bi-brightness-high-fill\"></i>\r\n        <p class=\"font-semibold\">Light mode</p>\r\n        `;\r\n    } else {\r\n        body.classList.remove('dark')\r\n        switchCtn.innerHTML = `\r\n        <i class=\"bi bi-moon font-semibold\"></i>\r\n        <p class=\"font-semibold\">Dark mode</p>\r\n        `;\r\n    }\r\n} \r\n\r\nswitchCtn.addEventListener(\"click\", () => {\r\n  if (!darkMode) {\r\n    body.classList.add(\"dark\");\r\n    darkMode = !darkMode;\r\n    updateThemeState()\r\n    switchCtn.innerHTML = `\r\n        <i class=\"bi bi-brightness-high-fill\"></i>\r\n        <p class=\"font-semibold\">Light mode</p>\r\n        `;\r\n  } else {\r\n    darkMode = !darkMode;\r\n    updateThemeState()\r\n    body.classList.remove(\"dark\");\r\n    switchCtn.innerHTML = `\r\n        <i class=\"bi bi-moon font-semibold\"></i>\r\n        <p class=\"font-semibold\">Dark mode</p>\r\n                `;\r\n  }\r\n});\r\n\r\nfilterCtn.addEventListener('click', () => {\r\n    list.classList.toggle('hidden')\r\n    filterCtn.classList.toggle('active')\r\n    listVisible = !listVisible\r\n\r\n\r\n    if (listVisible) {\r\n        let regions = Array.from(list.children)\r\n        \r\n        regions.forEach(region => {\r\n            region.addEventListener('click', (e) => {\r\n                updateUIFromRegion(e.target.innerHTML)\r\n                if (e.target.innerHTML !== 'Reset') {\r\n                    filterHeaderText.textContent = e.target.innerHTML\r\n                }\r\n                list.classList.add('hidden')\r\n                filterCtn.classList.remove('active')\r\n                listVisible = !listVisible\r\n            })\r\n        })\r\n    }\r\n})\r\n\r\nlet updateUIFromRegion = (region) => {\r\n    if (region !== 'Reset') {\r\n        currentRegion = region\r\n    \r\n        currentRegionCountries = countries.map(country => {\r\n            if (country.region == currentRegion) {\r\n                return country\r\n            }\r\n        }).filter(country => country !== undefined)\r\n        \r\n        container.innerHTML = ''\r\n        currentRegionCountries.map(country => {\r\n            const { name, flags, region, capital, population } = country\r\n            container.innerHTML += `\r\n            <div onclick=\"renderDetailPage(this.id)\" id=\"${name.common}\" class=\"card shadow-md bg-white cursor-pointer overflow-hidden rounded-md\">\r\n            <div class=\"card__upper w-full h-[11rem] overflow-hidden\">\r\n              <img class=\"w-full h-full objecct-fit rounded-t-md\" src=${flags.png} alt=\"\" loading=\"lazy\">\r\n            </div>\r\n            <div class=\"card__lower flex flex-col mt-6 px-5 pb-6 h-full\">\r\n              <p class=\"card__header font-bold pb-3\">${name.common}</p>\r\n                <div class=\"container\">\r\n                    <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Population: </p><span>${population.toLocaleString(\"en-US\")}</span></div>\r\n                    <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Region: </p><span>${region}</span></div>\r\n                    <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Capital: </p><span>${typeof(capital) == 'object' ? capital[0] : capital}</span></div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n            `\r\n        })\r\n    } else {\r\n        list.classList.add('hidden')\r\n        if (filterHeaderText.textContent !== 'Filter by region') {\r\n            resetFilterText()\r\n            container.innerHTML = `\r\n            <div class=\"container mx-auto absolute inset-x-0 font-semibold text-xl\">\r\n            <p class=\"self-center text-center mx-auto\">Loading countries data...</p>\r\n          </div>\r\n            `\r\n            setTimeout(() => {\r\n                updateUIAll()\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet updateUIAll = () => {\r\n    list.classList.add('hidden')\r\n    resetFilterText()\r\n    container.innerHTML = ''\r\n    countries.map(country => {\r\n        const { name, flags, region, capital, population } = country\r\n        container.innerHTML += `\r\n        <div onclick=\"renderDetailPage(this.id)\" id=\"${name.common}\" class=\"card shadow-md bg-white cursor-pointer overflow-hidden rounded-md\">\r\n        <div class=\"card__upper w-full h-[11rem] overflow-hidden\">\r\n          <img class=\"w-full h-full objecct-fit rounded-t-md\" src=${flags.png} alt=\"\" loading=\"lazy\">\r\n        </div>\r\n        <div class=\"card__lower flex flex-col mt-6 px-5 pb-6 h-full\">\r\n          <p class=\"card__header font-bold pb-3\">${name.common}</p>\r\n            <div class=\"container\">\r\n                <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Population: </p><span>${population.toLocaleString(\"en-US\")}</span></div>\r\n                <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Region: </p><span>${region}</span></div>\r\n                <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Capital: </p><span>${typeof(capital) == 'object' ? capital[0] : capital}</span></div>\r\n            </div>\r\n\r\n        </div>\r\n      </div>\r\n        `\r\n    })\r\n}\r\n\r\n\r\nlet resetFilterText = () => {\r\n    filterHeaderText.textContent = 'Filter by region'\r\n}\r\n\r\n\r\nsearchInput.addEventListener('keyup', (e) => {\r\n    inputValue = e.target.value\r\n    if (inputValue.length !== 0) {\r\n        resetFilterText()\r\n        updateUIfromSearch(inputValue)\r\n    } else {\r\n        updateUIAll()\r\n    }\r\n\r\n})\r\n\r\n\r\nlet updateUIfromSearch = (word) => {\r\n    wordQuery = word\r\n    \r\n    searchedCountry = countries.map(country => {\r\n        if (country.name.common.toLowerCase().includes(wordQuery.toLowerCase()) ) {\r\n            return country\r\n        }\r\n    }).filter(country => country !== undefined)\r\n    \r\n    container.innerHTML = ''\r\n    searchedCountry.map(country => {\r\n        const { name, flags, region, capital, population } = country\r\n        container.innerHTML += `\r\n        <div onclick=\"renderDetailPage(this.id)\" id=\"${name.common}\" class=\"card shadow-md bg-white cursor-pointer overflow-hidden rounded-md\">\r\n        <div class=\"card__upper w-full h-[11rem] overflow-hidden\">\r\n          <img class=\"w-full h-full objecct-fit rounded-t-md\" src=${flags.png} alt=\"\" loading=\"lazy\">\r\n        </div>\r\n        <div class=\"card__lower flex flex-col mt-6 px-5 pb-6 h-full\">\r\n          <p class=\"card__header font-bold pb-3\">${name.common}</p>\r\n            <div class=\"container\">\r\n                <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Population: </p><span>${population.toLocaleString(\"en-US\")}</span></div>\r\n                <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Region: </p><span>${region}</span></div>\r\n                <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Capital: </p><span>${typeof(capital) == 'object' ? capital[0] : capital}</span></div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n        `        \r\n    })\r\n\r\n    if (searchedCountry.length === 0) {\r\n        container.innerHTML = `\r\n        <div class=\"container mx-auto absolute inset-x-0 font-semibold text-xl\">\r\n        <p class=\"self-center text-center mx-auto\">No countries found :(</p>\r\n      </div>\r\n        `\r\n    }\r\n} \r\n\r\n\r\n\r\n//! DETAILS PAGE RENDERING\r\n\r\nlet countryBorders = []\r\nlet html = ``\r\nlet getBorders = (country = currentCountry) => {\r\n    html = ``\r\n    countryBorders = []\r\n    if (country.bordersMain.length == 0) {\r\n        return 'None'\r\n    } else {\r\n        for (let i = 0; i < country.bordersMain.length; i++) {\r\n            let borderCountry = countries.find(count => count.cca3 == country.bordersMain[i]).name.common\r\n            countryBorders.push(borderCountry)\r\n        }\r\n        countryBorders.forEach(countryName => {\r\n            html += `<button onclick=\"renderDetailPage('${countryName}')\" class=\" gotoBorder bg-white py-2 px-4 rounded-md shadow-md font-medium flex items-center gap-x-3 transition hover:text-zinc-400\"><span class=\"animate__animated animate__slideInDown\">${countryName}</span></button>\r\n            `\r\n        })\r\n    }\r\n    return html;\r\n}\r\n\r\nlet renderDetailPage = (countryName) => {\r\n    mainEle.innerHTML = ``\r\n    detailPageActive = !detailPageActive\r\n\r\n    currentCountry = countries.find(country => country.name.common == countryName)\r\n\r\n    const { name, bordersMain, flags, region, capital, population, subregion, tld, currencies, languages } = currentCountry\r\n    let nativeNameObjectsArr = []\r\n    let currenciesObjArr = []\r\n    let currenciesArr = []\r\n    let languagesArr = []\r\n    let nativeName = name.nativeName\r\n    for (const property in nativeName) {\r\n        nativeNameObjectsArr.push(nativeName[property])\r\n    }\r\n    for (const property in languages) {\r\n        languagesArr.push(languages[property])\r\n    }\r\n    for (const property in currencies) {\r\n        currenciesObjArr.push(currencies[property])\r\n    }\r\n    currenciesObjArr.forEach(currency => currenciesArr.push(currency.name))\r\n    nativeName = name.nativeName == undefined ? countryName : nativeNameObjectsArr[0].common\r\n\r\n\r\n    \r\n\r\n    mainEle.innerHTML = `\r\n            <div class=\"detailsCtn\">\r\n            <article class=\"backBtnCtn absolute top-28 px-9\">\r\n                <button onclick=\"window.location.reload()\" id=\"backBtn\" class=\"backBtn bg-white py-2 px-10 rounded-md shadow-md font-semibold flex items-center gap-x-3\"><i class=\"bi bi-arrow-left text-lg\"></i> Back</button>\r\n            </article>\r\n    \r\n            <section class=\"countryDataCtn mt-28 lg:mt-36 lg:flex gap-x-28 px-9 pb-6 mx-auto\">\r\n                <div class=\"countryDataCtn__imgCtn w-full md:w-[60%] lg:w-[50%] \">\r\n                    <img class=\"w-full\" src=${flags.png} alt=\"\">\r\n                </div>\r\n    \r\n                <div class=\"infoCtn flex flex-col gap-y-8 lg:gap-y-10 lg:w-[45%]\">\r\n                    <h3 class=\"infoCtn__headerText text-xl font-bold mt-8\">${countryName}</h3>\r\n                    <div class=\"infoCtn__info1 flex flex-wrap gap-x-[75px] gap-y-8\">\r\n                        <div class=\"ctn flex flex-col gap-y-2\">\r\n                            <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Native name: </p><span>${nativeName}</span></div>\r\n                            <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Population: </p><span>${population.toLocaleString(\"en-US\")}</span></div>\r\n                            <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Region: </p><span>${region}</span></div>\r\n                            <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Sub region: </p><span>${subregion}</span></div>\r\n                            <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Capital: </p><span>${capital}</span></div>\r\n                        </div>\r\n        \r\n                        <div class=\"infoCtn__info2 flex flex-col flex-wrap gap-y-2\">\r\n                            <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Top level domain: </p><span>${!tld ? 'None' : tld[0]}</span></div>\r\n                            <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Currencies: </p><span>${currenciesArr.join(' , ')}</span></div>\r\n                            <div class=\"detailCtn flex flex-wrap items-center gap-x-2\"><p class=\"font-semibold\">Languages: </p><span>${languagesArr.join(' , ')}</span></div>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div class=\"infoCtn__info3 flex flex-wrap gap-4 items-center pb-5\">\r\n                        <h3 class=\"infoCtn__headerText font-semibold text-lg\">Border countries: </h3>\r\n                        ${getBorders()}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    `\r\n}\r\n\r\nupdateThemeState()"]}