{"version":3,"sources":["script.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","countries","darkMode","listVisible","currentRegion","currentRegionCountries","inputValue","wordQuery","searchedCountry","container","document","querySelector","body","switchCtn","filterCtn","list","filterHeaderText","form","searchInput","sortAlphabetically","a","b","nameA","name","common","toUpperCase","nameB","comparison","fetch","then","response","json","sort","innerHTML","map","country","flags","region","capital","population","concat","png","toLocaleString","err","console","log","addEventListener","classList","remove","add","toggle","Array","from","children","forEach","e","updateUIFromRegion","target","textContent","filter","undefined","updateUIAll","value","length","updateUIfromSearch","word","toLowerCase","includes"],"mappings":"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","file":"script.js","sourcesContent":["let countries = []\r\nlet darkMode = false\r\nlet listVisible = false\r\nlet currentRegion = ''\r\nlet currentRegionCountries = []\r\nlet inputValue = ''\r\nlet wordQuery = ''\r\nlet searchedCountry = []\r\n\r\nconst container = document.querySelector('.countries__ctn')\r\nconst body = document.querySelector('body')\r\nconst switchCtn = document.querySelector('#switch__ctn')\r\nconst filterCtn = document.querySelector('.filter')\r\nconst list = document.querySelector('.list')\r\nconst filterHeaderText = document.querySelector('.filter__header--text')\r\nconst form = document.querySelector('#form')\r\nconst searchInput = document.querySelector('#search')\r\n\r\nfunction sortAlphabetically(a, b) {\r\n  // Use toUpperCase() to ignore character casing\r\n  const nameA = a.name.common.toUpperCase();\r\n  const nameB = b.name.common.toUpperCase();\r\n\r\n  let comparison = 0;\r\n  if (nameA > nameB) {\r\n    comparison = 1;\r\n  } else if (nameA < nameB) {\r\n    comparison = -1;\r\n  }\r\n  return comparison;\r\n}\r\n\r\nfetch('https://restcountries.com/v3.1/all')\r\n    .then(response => response.json())  // convert to json\r\n    .then(json => {\r\n        countries = json.sort(sortAlphabetically)\r\n\r\n        container.innerHTML = ''\r\n        countries.map(country => {\r\n            const { name, flags, region, capital, population } = country\r\n            container.innerHTML += `\r\n            <div class=\"card shadow-md bg-white cursor-pointer overflow-hidden rounded-md\">\r\n            <div class=\"card__upper w-full h-[11rem] overflow-hidden\">\r\n              <img class=\"w-full h-full objecct-fit rounded-t-md\" src=${flags.png} alt=\"\">\r\n            </div>\r\n            <div class=\"card__lower flex flex-col mt-6 px-5 pb-6 h-full\">\r\n              <p class=\"card__header font-bold pb-3\">${name.common}</p>\r\n                <div class=\"container\">\r\n                    <div class=\"detailCtn flex items-center gap-x-2\"><p class=\"font-semibold\">Population: </p><span>${population.toLocaleString(\"en-US\")}</span></div>\r\n                    <div class=\"detailCtn flex items-center gap-x-2\"><p class=\"font-semibold\">Region: </p><span>${region}</span></div>\r\n                    <div class=\"detailCtn flex items-center gap-x-2\"><p class=\"font-semibold\">Capital: </p><span>${typeof(capital) == 'object' ? capital[0] : capital}</span></div>\r\n                </div>\r\n\r\n            </div>\r\n          </div>\r\n            `\r\n        })\r\n\r\n    })    //print data to console\r\n    .catch(err => console.log('Request Failed', err));\r\n\r\n\r\n\r\n\r\nswitchCtn.addEventListener(\"click\", () => {\r\n  if (!darkMode) {\r\n    body.classList.add(\"dark\");\r\n    darkMode = !darkMode;\r\n    switchCtn.innerHTML = `\r\n        <i class=\"bi bi-brightness-high-fill\"></i>\r\n        <p class=\"font-semibold\">Light mode</p>\r\n        `;\r\n  } else {\r\n    darkMode = !darkMode;\r\n    body.classList.remove(\"dark\");\r\n    switchCtn.innerHTML = `\r\n        <i class=\"bi bi-moon font-semibold\"></i>\r\n        <p class=\"font-semibold\">Dark mode</p>\r\n                `;\r\n  }\r\n});\r\n\r\nfilterCtn.addEventListener('click', () => {\r\n    list.classList.toggle('invisible')\r\n    filterCtn.classList.toggle('active')\r\n    listVisible = !listVisible\r\n\r\n\r\n    if (listVisible) {\r\n        let regions = Array.from(list.children)\r\n        \r\n        regions.forEach(region => {\r\n            region.addEventListener('click', (e) => {\r\n                updateUIFromRegion(e.target.innerHTML)\r\n                filterHeaderText.textContent = e.target.innerHTML\r\n                list.classList.add('invisible')\r\n                filterCtn.classList.remove('active')\r\n                listVisible = !listVisible\r\n            })\r\n        })\r\n    }\r\n})\r\n\r\nlet updateUIFromRegion = (region) => {\r\n    currentRegion = region\r\n\r\n    currentRegionCountries = countries.map(country => {\r\n        if (country.region == currentRegion) {\r\n            return country\r\n        }\r\n    }).filter(country => country !== undefined)\r\n    \r\n    container.innerHTML = ''\r\n    currentRegionCountries.map(country => {\r\n        const { name, flags, region, capital, population } = country\r\n        container.innerHTML += `\r\n        <div class=\"card shadow-md bg-white cursor-pointer overflow-hidden rounded-md\">\r\n        <div class=\"card__upper w-full h-[11rem] overflow-hidden\">\r\n          <img class=\"w-full h-full objecct-fit rounded-t-md\" src=${flags.png} alt=\"\">\r\n        </div>\r\n        <div class=\"card__lower flex flex-col mt-6 px-5 pb-6 h-full\">\r\n          <p class=\"card__header font-bold pb-3\">${name.common}</p>\r\n            <div class=\"container\">\r\n                <div class=\"detailCtn flex items-center gap-x-2\"><p class=\"font-semibold\">Population: </p><span>${population.toLocaleString(\"en-US\")}</span></div>\r\n                <div class=\"detailCtn flex items-center gap-x-2\"><p class=\"font-semibold\">Region: </p><span>${region}</span></div>\r\n                <div class=\"detailCtn flex items-center gap-x-2\"><p class=\"font-semibold\">Capital: </p><span>${typeof(capital) == 'object' ? capital[0] : capital}</span></div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n        `\r\n    })\r\n}\r\n\r\n\r\nlet updateUIAll = () => {\r\n    filterHeaderText.textContent = 'Filter by region'\r\n    container.innerHTML = ''\r\n    countries.map(country => {\r\n        const { name, flags, region, capital, population } = country\r\n        container.innerHTML += `\r\n        <div class=\"card shadow-md bg-white cursor-pointer overflow-hidden rounded-md\">\r\n        <div class=\"card__upper w-full h-[11rem] overflow-hidden\">\r\n          <img class=\"w-full h-full objecct-fit rounded-t-md\" src=${flags.png} alt=\"\">\r\n        </div>\r\n        <div class=\"card__lower flex flex-col mt-6 px-5 pb-6 h-full\">\r\n          <p class=\"card__header font-bold pb-3\">${name.common}</p>\r\n            <div class=\"container\">\r\n                <div class=\"detailCtn flex items-center gap-x-2\"><p class=\"font-semibold\">Population: </p><span>${population.toLocaleString(\"en-US\")}</span></div>\r\n                <div class=\"detailCtn flex items-center gap-x-2\"><p class=\"font-semibold\">Region: </p><span>${region}</span></div>\r\n                <div class=\"detailCtn flex items-center gap-x-2\"><p class=\"font-semibold\">Capital: </p><span>${typeof(capital) == 'object' ? capital[0] : capital}</span></div>\r\n            </div>\r\n\r\n        </div>\r\n      </div>\r\n        `\r\n    })\r\n}\r\n\r\n\r\n\r\nsearchInput.addEventListener('keyup', (e) => {\r\n    inputValue = e.target.value\r\n    if (inputValue.length !== 0) {\r\n        filterHeaderText.textContent = 'Filter by region'\r\n        updateUIfromSearch(inputValue)\r\n    } else {\r\n        updateUIAll()\r\n    }\r\n\r\n})\r\n\r\n\r\nlet updateUIfromSearch = (word) => {\r\n    wordQuery = word\r\n    \r\n    searchedCountry = countries.map(country => {\r\n        if (country.name.common.toLowerCase().includes(wordQuery.toLowerCase()) ) {\r\n            return country\r\n        }\r\n    }).filter(country => country !== undefined)\r\n    \r\n    container.innerHTML = ''\r\n    searchedCountry.map(country => {\r\n        const { name, flags, region, capital, population } = country\r\n        container.innerHTML += `\r\n        <div class=\"card shadow-md bg-white cursor-pointer overflow-hidden rounded-md\">\r\n        <div class=\"card__upper w-full h-[11rem] overflow-hidden\">\r\n          <img class=\"w-full h-full objecct-fit rounded-t-md\" src=${flags.png} alt=\"\">\r\n        </div>\r\n        <div class=\"card__lower flex flex-col mt-6 px-5 pb-6 h-full\">\r\n          <p class=\"card__header font-bold pb-3\">${name.common}</p>\r\n            <div class=\"container\">\r\n                <div class=\"detailCtn flex items-center gap-x-2\"><p class=\"font-semibold\">Population: </p><span>${population.toLocaleString(\"en-US\")}</span></div>\r\n                <div class=\"detailCtn flex items-center gap-x-2\"><p class=\"font-semibold\">Region: </p><span>${region}</span></div>\r\n                <div class=\"detailCtn flex items-center gap-x-2\"><p class=\"font-semibold\">Capital: </p><span>${typeof(capital) == 'object' ? capital[0] : capital}</span></div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n        `        \r\n    })\r\n\r\n    if (searchedCountry.length === 0) {\r\n        container.innerHTML = `\r\n        <div class=\"container mx-auto absolute inset-x-0 font-semibold text-xl\">\r\n        <p class=\"self-center text-center mx-auto\">No countries found :(</p>\r\n      </div>\r\n        `\r\n    }\r\n} "]}